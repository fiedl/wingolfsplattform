#!/usr/bin/env ruby
#
# This script handles receiving emails in order to reprocess them, e.g. for group emails.
# Have a look at these resources:
#
#   * http://railscasts.com/episodes/313-receiving-email-with-mailman.
#   * https://github.com/titanous/mailman
#   * http://rubydoc.info/github/titanous/mailman/master/file/USER_GUIDE.md
#

require "rubygems"
require "bundler/setup"
require "mailman"
require 'yaml'

ENV['RAILS_ENV'] ||= 'production'

user = `whoami`.gsub("\n", "")
maildir = "/home/#{user}/Maildir"
config = {
  "user" => user,
  "maildir" => maildir
}

THIS_FILE = File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
log_file = File.expand_path(File.join(THIS_FILE, "../../log/mailman.log"))

Mailman.config.logger = Logger.new(log_file)
Mailman.config.maildir = config["maildir"] if config && config["maildir"]

p "mailman: configuration set. starting mailman application ..."
Mailman::Application.run do

  p "mailman run ..."
  p "monitoring #{Mailman.config.maildir}/new."
  Mailman.logger.info "Watching Maildir #{Mailman.config.maildir}/new."
  default do
    
    begin
      Mailman.logger.info "Processing incoming email:\n#{message}"
      post = Post.create_from_message(message)
      Mailman.logger.info "Processing completed. Created post #{post.id}."

      # copy delivery settings from the Rails configuration
      delivery_method = Rails.application.config.action_mailer.delivery_method
      delivery_settings = Rails.application.config.action_mailer.smtp_settings
      delivery_settings ||= {}

      # TEMPORARY SAFE GUARD!
      # ONLY ALLOW MESSAGES TO fiedlschuster.
      messages_to_deliver = post.messages_to_deliver_to_mailing_list_members
      messages_to_deliver.each do |message|
        raise "TEMP: no mail to fiedlschuster:\n#{message}" unless message.smtp_envelope_to.first.include?('fiedlschuster')

        message.delivery_method delivery_method, delivery_settings
        message.deliver
      end
      Mailman.logger.info "Delivered post #{post.id} to #{messages_to_deliver.count} users."

    rescue Exception => e
      Mailman.logger.error "Exception occured while processing received email:\n#{message}"
      Mailman.logger.error [e, *e.backtrace].join("\n")
    end

  end
end



# This file is still in development.
# Try this using 
#
#   cat mailman_test.eml | script/mailman_server
