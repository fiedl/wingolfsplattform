# -*- coding: utf-8 -*-

class Password < UserPropertyString

  def encrypt
    # Ein Leerpasswort soll nicht verschlüsselt werden, um nicht den Eindruck zu erwecken, es sei ein Passwort vorhanden.
    return "" if self.blank?
    # Wenn noch kein Salt besteht, muss für den Benutzer einmalig einer erstellt werden.
    unless @user.salt 
      @user.salt = Digest::SHA1.hexdigest( "--#{Time.now}--#{@user.name}--" )
    end
    encrypt_string( self, @user.salt )
  end

  def valid_against_encrypted_password?( encrypted_password, salt )
    encrypted_password == encrypt_string( self, salt )
  end

  def self.generate
    Password.new( `pwgen -N 1 -n -c -B`.to_s[0..-2], :user => @user )
  end

  def generate!
    replace self.class.generate
  end

  private

  def encrypt_string( string, salt )
    Digest::SHA1.hexdigest( "--#{salt}--#{string}--" )
  end
  
end


